---
import Welcome from '../components/Welcome.astro';
import Megamenu from '../components/megamenu.astro';
import Cta from '../components/cta.astro';
import Units from '../components/units-appliances-los-angeles.astro';
import Layout from '../layouts/Layout.astro';

// Welcome to Astro! Wondering what to do next? Check out the Astro documentation at https://docs.astro.build
// Don't want to use any of this? Delete everything in this file, the `assets`, `components`, and `layouts` directories, and start fresh.
---
   
<Layout>
<Megamenu />
  <main>
    <!-- Main Container -->
   
    <!DOCTYPE html>
    <html lang="en">
    <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Responsive Tabs</title>
      <style>
        body {
          margin: 0;
          font-family: Arial, sans-serif;
        }
    
        /* Mobile Accordion Style */
        .accordion .tab {
          border: 1px solid #e9eaec;
          border-radius: 3px;
          margin-bottom: 10px;
        }
    
        .accordion input {
          display: none;
        }
    
        .accordion .tab-title {
          padding: 10px;
          display: block;
          text-transform: uppercase;
          font-weight: bold;
          cursor: pointer;
          background-color: #f1f1f1;
          color: #333;
          position: relative;
        }
    
        .accordion .tab-title::after {
          content: '+';
          float: right;
        }
    
        .accordion input:checked + .tab-title {
          background-color: #50a2de;
          color: white;
        }
    
        .accordion input:checked + .tab-title::after {
          content: 'âˆ’';
        }
    
        .accordion .tab-content {
          display: none;
          padding: 10px 20px;
        }
    
        .accordion input:checked ~ .tab-content {
          display: block;
        }
    
        /* Desktop Layout */
        @media (min-width: 768px) {
          .accordion {
            display: flex;
            flex-direction: row;
            height: 100vh;
          }
    
          /* Left Column Tabs */
          .tab-menu {
            width: 30%;
            background-color: #003366;
            padding: 1rem;
            display: flex;
            flex-direction: column;
            color: white;
          }
    
          .tab-menu button {
            background-color: #004080;
            color: white;
            border: none;
            padding: 15px;
            margin-bottom: 10px;
            text-align: center;
            cursor: pointer;
            border-radius: 5px;
            transition: background-color 0.3s;
          }
    
          .tab-menu button:hover {
            background-color: #0059b3;
          }
    
          .tab-menu button.active {
            background-color: #00224d;
          }
    
          /* Right Content Area */
          .tab-content-container {
            flex-grow: 1;
            background-color: #e6e6e6;
            padding: 2rem;
            display: none; /* Hidden by default */
          }
    
          .tab-content-container.active {
            display: block;
          }
    
          .tab-content-container img {
            max-width: 100%;
            height: auto;
            margin-bottom: 1rem;
          }
    
          .tab-content-container p {
            font-size: 1rem;
            color: #333;
          }
        }
      </style>
    </head>
    <body>
      <div class="accordion">
        <!-- Mobile Accordion -->
        <div class="tab">
          <input type="checkbox" id="tab1" name="tab-group">
          <label for="tab1" class="tab-title">Option 1</label>
          <div class="tab-content">
            <p>Content for Option 1</p>
          </div>
        </div>
        <div class="tab">
          <input type="checkbox" id="tab2" name="tab-group">
          <label for="tab2" class="tab-title">Option 2</label>
          <div class="tab-content">
            <p>Content for Option 2</p>
          </div>
        </div>
        <div class="tab">
          <input type="checkbox" id="tab3" name="tab-group">
          <label for="tab3" class="tab-title">Option 3</label>
          <div class="tab-content">
            <p>Content for Option 3</p>
          </div>
        </div>
    
        <!-- Desktop Tabs -->
        <div class="tab-menu" style="display: none;">
          <button class="tablinks" onclick="openTab(event, 'tab-content-1')" id="defaultOpen">Option 1</button>
          <button class="tablinks" onclick="openTab(event, 'tab-content-2')">Option 2</button>
          <button class="tablinks" onclick="openTab(event, 'tab-content-3')">Option 3</button>
        </div>
        <div class="tab-content-container" style="display: none;">
          <div id="tab-content-1" class="tab-content-container">
            <p>Content for Option 1</p>
          </div>
          <div id="tab-content-2" class="tab-content-container">
            <p>Content for Option 2</p>
          </div>
          <div id="tab-content-3" class="tab-content-container">
            <p>Content for Option 3</p>
          </div>
        </div>
      </div>
    
      <script>
        // Desktop Tab Switching Functionality
        function openTab(evt, tabName) {
          const tabContentContainers = document.querySelectorAll(".tab-content-container");
          const tabLinks = document.querySelectorAll(".tablinks");
    
          // Hide all tab content and remove 'active' class from buttons
          tabContentContainers.forEach(container => container.classList.remove("active"));
          tabLinks.forEach(link => link.classList.remove("active"));
    
          // Show the current tab's content and add 'active' class to button
          document.getElementById(tabName).classList.add("active");
          evt.currentTarget.classList.add("active");
        }
    
        // Open the first tab by default on desktop
        document.getElementById("defaultOpen").click();
    
        // Ensure desktop elements are displayed when width > 768px
        if (window.innerWidth >= 768) {
          document.querySelector(".tab-menu").style.display = "flex";
          document.querySelector(".tab-content-container").style.display = "block";
        }
    
        // Adjust layout dynamically on window resize
        window.addEventListener("resize", () => {
          if (window.innerWidth >= 768) {
            document.querySelector(".tab-menu").style.display = "flex";
            document.querySelector(".tab-content-container").style.display = "block";
          } else {
            document.querySelector(".tab-menu").style.display = "none";
            document.querySelector(".tab-content-container").style.display = "none";
          }
        });
      </script>
    </body>
    </html>
    
    
  </main>
<Cta />
</Layout>